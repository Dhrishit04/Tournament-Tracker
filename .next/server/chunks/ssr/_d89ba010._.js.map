{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/teams/page.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Users, Crown } from 'lucide-react'; // Added Crown icon for owner\nimport Image from 'next/image';\n\n// Mock data - replace with actual data fetching from Firestore later\n// Added owner property and updated to 5 teams\nconst teams = [\n  { id: 't1', name: 'Alpha Eagles', owner: 'Mr. Alpha', logo: '/placeholder-logo.png', players: ['Player A1', 'Player A2', 'Player A3'] },\n  { id: 't2', name: 'Bravo Bears', owner: 'Ms. Bravo', logo: '/placeholder-logo.png', players: ['Player B1', 'Player B2'] },\n  { id: 't3', name: 'Charlie Cheetahs', owner: 'Dr. Charlie', logo: '/placeholder-logo.png', players: ['Player C1', 'Player C2', 'Player C3'] },\n  { id: 't4', name: 'Delta Dragons', owner: 'Prof. Delta', logo: '/placeholder-logo.png', players: ['Player D1', 'Player D2'] },\n  { id: 't5', name: 'Echo Foxes', owner: 'Capt. Echo', logo: '/placeholder-logo.png', players: ['Player E1', 'Player E2', 'Player E3'] },\n];\n\nexport default function TeamsPage() {\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold flex items-center gap-2\">\n        <Users className=\"w-8 h-8 text-primary\" />\n        Teams\n      </h1>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\"> {/* Adjusted gap */}\n        {teams.map((team) => (\n          <Card key={team.id}>\n            <CardHeader className=\"flex flex-row items-center gap-4 space-y-0 pb-2\">\n                <Avatar className=\"h-12 w-12\">\n                  {/* Use placeholder image, replace logo path later */}\n                  <Image\n                    src={`https://picsum.photos/seed/${team.id}/48/48`}\n                    alt={`${team.name} Logo`}\n                    width={48}\n                    height={48}\n                    className=\"rounded-full\"\n                    data-ai-hint=\"team logo sport crest\" // Updated hint\n                  />\n                  <AvatarFallback>{team.name.substring(0, 2).toUpperCase()}</AvatarFallback>\n                </Avatar>\n              {/* Wrapped title and owner in a div for better layout */}\n              <div className=\"flex flex-col\">\n                <CardTitle>{team.name}</CardTitle>\n                 <div className=\"flex items-center gap-1 text-sm text-muted-foreground mt-1\">\n                    <Crown className=\"w-4 h-4\" />\n                    <span>{team.owner}</span>\n                  </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground\">\n                {/* Displaying player count as a simple profile detail for now */}\n                {team.players.length} Players\n              </p>\n              {/* Add more details or a link to a full team profile later */}\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA,oVAA6C,6BAA6B;AAA1E;AACA;;;;;;AAEA,qEAAqE;AACrE,8CAA8C;AAC9C,MAAM,QAAQ;IACZ;QAAE,IAAI;QAAM,MAAM;QAAgB,OAAO;QAAa,MAAM;QAAyB,SAAS;YAAC;YAAa;YAAa;SAAY;IAAC;IACtI;QAAE,IAAI;QAAM,MAAM;QAAe,OAAO;QAAa,MAAM;QAAyB,SAAS;YAAC;YAAa;SAAY;IAAC;IACxH;QAAE,IAAI;QAAM,MAAM;QAAoB,OAAO;QAAe,MAAM;QAAyB,SAAS;YAAC;YAAa;YAAa;SAAY;IAAC;IAC5I;QAAE,IAAI;QAAM,MAAM;QAAiB,OAAO;QAAe,MAAM;QAAyB,SAAS;YAAC;YAAa;SAAY;IAAC;IAC5H;QAAE,IAAI;QAAM,MAAM;QAAc,OAAO;QAAc,MAAM;QAAyB,SAAS;YAAC;YAAa;YAAa;SAAY;IAAC;CACtI;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;;kCACZ,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;oBAAyB;;;;;;;0BAG5C,8OAAC;gBAAI,WAAU;;oBAAuD;oBACnE,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,gIAAA,CAAA,OAAI;;8CACH,8OAAC,gIAAA,CAAA,aAAU;oCAAC,WAAU;;sDAClB,8OAAC,kIAAA,CAAA,SAAM;4CAAC,WAAU;;8DAEhB,8OAAC,6HAAA,CAAA,UAAK;oDACJ,KAAK,CAAC,2BAA2B,EAAE,KAAK,EAAE,CAAC,MAAM,CAAC;oDAClD,KAAK,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC;oDACxB,OAAO;oDACP,QAAQ;oDACR,WAAU;oDACV,gBAAa,wBAAwB,eAAe;;;;;;8DAEtD,8OAAC,kIAAA,CAAA,iBAAc;8DAAE,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;;;;;;;;;;;;sDAG1D,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,gIAAA,CAAA,YAAS;8DAAE,KAAK,IAAI;;;;;;8DACpB,8OAAC;oDAAI,WAAU;;sEACZ,8OAAC,oMAAA,CAAA,QAAK;4DAAC,WAAU;;;;;;sEACjB,8OAAC;sEAAM,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;;;;8CAIzB,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC;wCAAE,WAAU;;4CAEV,KAAK,OAAO,CAAC,MAAM;4CAAC;;;;;;;;;;;;;2BA1BhB,KAAK,EAAE;;;;;;;;;;;;;;;;;AAmC5B","debugId":null}}]
}